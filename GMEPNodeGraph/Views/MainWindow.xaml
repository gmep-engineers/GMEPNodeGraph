<Window x:Class="GMEPNodeGraph.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:vm="clr-namespace:GMEPNodeGraph.ViewModels"
        xmlns:ctrl="clr-namespace:NodeGraph.NET6.Controls;assembly=NodeGraph.NET6"
        xmlns:local="clr-namespace:GMEPNodeGraph"
        mc:Ignorable="d"
        Title="GMEPNodeGraph" Height="600" Width="1000" WindowState="Maximized">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding CloseWindowCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <ContextMenu x:Key="NodeGraphContextMenu">
            <MenuItem IsEnabled="{Binding ProjectLoaded}" Header="Add Service" Command="{Binding AddServiceCommand}"/>
            <MenuItem IsEnabled="{Binding ProjectLoaded}" Header="Add Main Breaker" Command="{Binding AddMainBreakerCommand}"/>
            <MenuItem IsEnabled="{Binding ProjectLoaded}" Header="Add Meter" Command="{Binding AddMeterCommand}"/>
            <MenuItem IsEnabled="{Binding ProjectLoaded}" Header="Add Bus" Command="{Binding AddBusCommand}"/>
            <MenuItem IsEnabled="{Binding ProjectLoaded}" Header="Add Distribution Breaker" Command="{Binding AddDistributionBreakerCommand}"/>
            <MenuItem IsEnabled="{Binding ProjectLoaded}" Header="Add Panel" Command="{Binding AddPanelCommand}"/>
            <MenuItem IsEnabled="{Binding ProjectLoaded}" Header="Add Panel Breaker" Command="{Binding AddPanelBreakerCommand}"/>
            <MenuItem IsEnabled="{Binding ProjectLoaded}" Header="Add Disconnect" Command="{Binding AddDisconnectCommand}"/>
            <MenuItem IsEnabled="{Binding ProjectLoaded}" Header="Add Transformer" Command="{Binding AddTransformerCommand}"/>
            <MenuItem IsEnabled="{Binding ProjectLoaded}" Header="Add Equipment" Command="{Binding AddEquipmentCommand}"/>
            <MenuItem IsEnabled="{Binding ProjectLoaded}" Header="Add Section" Command="{Binding AddGroupNodeCommand}"/>
            <MenuItem IsEnabled="{Binding ProjectLoaded}" Header="Remove Selected" Command="{Binding RemoveNodesCommand}"/>
        </ContextMenu>

        <Style x:Key="NodeInputStyle" TargetType="{x:Type ctrl:NodeInputContent}" BasedOn="{StaticResource {x:Type ctrl:NodeInputContent}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <Setter Property="Content" Value="{Binding Label}"/>
            <Setter Property="IsEnabled" Value="{Binding IsEnable}"/>
            <Setter Property="AllowToConnectMultiple" Value="{Binding AllowToConnectMultiple}"/>
        </Style>

        <Style x:Key="NodeOutputStyle" TargetType="{x:Type ctrl:NodeOutputContent}" BasedOn="{StaticResource {x:Type ctrl:NodeOutputContent}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <Setter Property="Content" Value="{Binding Label}"/>
            <Setter Property="IsEnabled" Value="{Binding IsEnable}"/>
        </Style>

        <Style x:Key="NodeLinkStyle" TargetType="{x:Type ctrl:NodeLink}" BasedOn="{StaticResource {x:Type ctrl:NodeLink}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <Setter Property="OutputConnectorGuid" Value="{Binding OutputConnectorGuid, Mode=OneWay}"/>
            <Setter Property="InputConnectorGuid" Value="{Binding InputConnectorGuid, Mode=OneWay}"/>
            <Setter Property="IsLocked" Value="{Binding IsLocked, Mode=OneWay}"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected}"/> <!--dont need to specify Mode=TwoWay because link is set default two way property.-->
        </Style>

        <Style x:Key="DefaultNodeStyle" TargetType="{x:Type ctrl:DefaultNode}" BasedOn="{StaticResource {x:Type ctrl:DefaultNode}}">
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <!--disconnect position binding if you specify Mode=OneWay, because it will change binding position instance in view control.-->
            <Setter Property="Position" Value="{Binding Position}"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
            <Setter Property="Inputs" Value="{Binding Inputs}"/>
            <Setter Property="InputLayout" Value="Center"/>
            <Setter Property="Outputs" Value="{Binding Outputs}"/>
            <Setter Property="OutputLayout" Value="Center"/>
            <Setter Property="InputMargin" Value="5,1,5,1"/>
            <Setter Property="OutputMargin" Value="5,0,9,1"/>
            <Setter Property="InputStyle" Value="{StaticResource NodeInputStyle}"/>
            <Setter Property="OutputStyle" Value="{StaticResource NodeOutputStyle}"/>
            <Setter Property="SizeChangedCommand" Value="{Binding SizeChangedCommand}"/>
            <Setter Property="HeaderContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Background="#FF666666">
                            <StackPanel HorizontalAlignment="Center">
                                <TextBox Background="#FF666666" BorderThickness="2" MaxLength="15" BorderBrush="#FF666666" Text="{Binding Name}" Foreground="White" />
                            </StackPanel>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Margin="5 5" VerticalAlignment="Center">
                            <!-- put voltage and amperage dropdown here-->
                            <ComboBox Width="70" SelectedValue="{Binding Path=StatusId}" SelectedValuePath="Tag" >
                                <ComboBoxItem Tag="1">(N)</ComboBoxItem>
                                <ComboBoxItem Tag="2">(E)</ComboBoxItem>
                                <ComboBoxItem Tag="3">(R)</ComboBoxItem>
                            </ComboBox>
                            <ComboBox Visibility="{Binding ServiceAmpVisible}" SelectedValue="{Binding Path=AmpRatingId}" SelectedValuePath="Tag" >
                                <ComboBoxItem Tag="1">100A</ComboBoxItem>
                                <ComboBoxItem Tag="2">200A</ComboBoxItem>
                                <ComboBoxItem Tag="3">400A</ComboBoxItem>
                                <ComboBoxItem Tag="4">600A</ComboBoxItem>
                                <ComboBoxItem Tag="5">800A</ComboBoxItem>
                                <ComboBoxItem Tag="6">1000A</ComboBoxItem>
                                <ComboBoxItem Tag="7">1200A</ComboBoxItem>
                                <ComboBoxItem Tag="8">1600A</ComboBoxItem>
                                <ComboBoxItem Tag="9">2000A</ComboBoxItem>
                                <ComboBoxItem Tag="10">2200A</ComboBoxItem>
                                <ComboBoxItem Tag="11">3000A</ComboBoxItem>
                                <ComboBoxItem Tag="12">4000A</ComboBoxItem>
                            </ComboBox>
                            <Label Foreground="#FFF" Visibility="{Binding PanelAmpLabelsVisible}">Main Size</Label>
                            <ComboBox Width="70" Visibility="{Binding PanelMainAmpVisible}" SelectedValue="{Binding Path=MainAmpRatingId}" SelectedValuePath="Tag" >
                                <ComboBox.Style>
                                    <Style TargetType="ComboBox">
                                        <Setter Property="IsEnabled" Value="True"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsMlo}" Value="True">
                                                <Setter Property="IsEnabled" Value="False"/>
                                                <Setter Property="SelectedValue" Value="14"/>
                                                <Setter Property="Foreground" Value="LightGray"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </ComboBox.Style>
                                <ComboBoxItem Tag="1">60A</ComboBoxItem>
                                <ComboBoxItem Tag="2">100A</ComboBoxItem>
                                <ComboBoxItem Tag="3">125A</ComboBoxItem>
                                <ComboBoxItem Tag="4">150A</ComboBoxItem>
                                <ComboBoxItem Tag="5">175A</ComboBoxItem>
                                <ComboBoxItem Tag="6">200A</ComboBoxItem>
                                <ComboBoxItem Tag="7">225A</ComboBoxItem>
                                <ComboBoxItem Tag="8">250A</ComboBoxItem>
                                <ComboBoxItem Tag="9">275A</ComboBoxItem>
                                <ComboBoxItem Tag="10">400A</ComboBoxItem>
                                <ComboBoxItem Tag="11">500A</ComboBoxItem>
                                <ComboBoxItem Tag="12">600A</ComboBoxItem>
                                <ComboBoxItem Tag="13">800A</ComboBoxItem>
                            </ComboBox>
                            <CheckBox IsChecked="{Binding IsMlo}" Foreground="#FFF" Visibility="{Binding MloVisible}" Margin="5 5 5 5" >M.L.O.</CheckBox>
                            <CheckBox IsChecked="{Binding IsRecessed}" Foreground="#FFF" Visibility="{Binding RecessedVisible}" Margin="5 5 5 5" >Recessed</CheckBox>
                            <Label Foreground="#FFF" Visibility="{Binding PanelAmpLabelsVisible}">Bus Size</Label>
                            <ComboBox Width="70" Visibility="{Binding PanelBusAmpVisible}" SelectedValue="{Binding Path=PanelAmpRatingId}" SelectedValuePath="Tag" >
                                <ComboBoxItem Tag="1">60A</ComboBoxItem>
                                <ComboBoxItem Tag="2">100A</ComboBoxItem>
                                <ComboBoxItem Tag="3">125A</ComboBoxItem>
                                <ComboBoxItem Tag="4">150A</ComboBoxItem>
                                <ComboBoxItem Tag="5">175A</ComboBoxItem>
                                <ComboBoxItem Tag="6">200A</ComboBoxItem>
                                <ComboBoxItem Tag="7">225A</ComboBoxItem>
                                <ComboBoxItem Tag="8">250A</ComboBoxItem>
                                <ComboBoxItem Tag="9">275A</ComboBoxItem>
                                <ComboBoxItem Tag="10">400A</ComboBoxItem>
                                <ComboBoxItem Tag="11">500A</ComboBoxItem>
                                <ComboBoxItem Tag="12">600A</ComboBoxItem>
                                <ComboBoxItem Tag="13">800A</ComboBoxItem>
                            </ComboBox>
                            <ComboBox Width="95" Visibility="{Binding VoltagePhaseVisible}" SelectedValue="{Binding Path=VoltageId}" SelectedValuePath="Tag" >
                                <ComboBoxItem Tag="1">120/208-3Φ</ComboBoxItem>
                                <ComboBoxItem Tag="2">120/240-1Φ</ComboBoxItem>
                                <ComboBoxItem Tag="3">277/480-3Φ</ComboBoxItem>
                                <ComboBoxItem Tag="4">120/240-3Φ</ComboBoxItem>
                            </ComboBox>
                            <ComboBox Width="70" Visibility="{Binding AsVisible}"  SelectedValue="{Binding Path=AsSizeId}" SelectedValuePath="Tag" >
                                <ComboBoxItem Tag="1">30 AS</ComboBoxItem>
                                <ComboBoxItem Tag="2">60 AS</ComboBoxItem>
                                <ComboBoxItem Tag="3">100 AS</ComboBoxItem>
                                <ComboBoxItem Tag="4">200 AS</ComboBoxItem>
                                <ComboBoxItem Tag="5">400 AS</ComboBoxItem>
                                <ComboBoxItem Tag="6">600 AS</ComboBoxItem>
                            </ComboBox>
                            <ComboBox Width="70" Visibility="{Binding AfVisible}"  SelectedValue="{Binding Path=AfSizeId}" SelectedValuePath="Tag" >
                                <ComboBoxItem Tag="1">15 AF</ComboBoxItem>
                                <ComboBoxItem Tag="2">20 AF</ComboBoxItem>
                                <ComboBoxItem Tag="3">25 AF</ComboBoxItem>
                                <ComboBoxItem Tag="4">30 AF</ComboBoxItem>
                                <ComboBoxItem Tag="5">35 AF</ComboBoxItem>
                                <ComboBoxItem Tag="6">40 AF</ComboBoxItem>
                                <ComboBoxItem Tag="7">45 AF</ComboBoxItem>
                                <ComboBoxItem Tag="8">50 AF</ComboBoxItem>
                                <ComboBoxItem Tag="9">60 AF</ComboBoxItem>
                                <ComboBoxItem Tag="10">70 AF</ComboBoxItem>
                                <ComboBoxItem Tag="11">80 AF</ComboBoxItem>
                                <ComboBoxItem Tag="12">90 AF</ComboBoxItem>
                                <ComboBoxItem Tag="13">100 AF</ComboBoxItem>
                                <ComboBoxItem Tag="14">110 AF</ComboBoxItem>
                                <ComboBoxItem Tag="15">125 AF</ComboBoxItem>
                                <ComboBoxItem Tag="16">150 AF</ComboBoxItem>
                                <ComboBoxItem Tag="17">175 AF</ComboBoxItem>
                                <ComboBoxItem Tag="18">200 AF</ComboBoxItem>
                                <ComboBoxItem Tag="19">225 AF</ComboBoxItem>
                                <ComboBoxItem Tag="20">250 AF</ComboBoxItem>
                                <ComboBoxItem Tag="21">300 AF</ComboBoxItem>
                                <ComboBoxItem Tag="22">350 AF</ComboBoxItem>
                                <ComboBoxItem Tag="23">400 AF</ComboBoxItem>
                                <ComboBoxItem Tag="24">450 AF</ComboBoxItem>
                                <ComboBoxItem Tag="25">500 AF</ComboBoxItem>
                                <ComboBoxItem Tag="26">600 AF</ComboBoxItem>
                            </ComboBox>
                            <ComboBox Width="70" Visibility="{Binding PoleVisible}" SelectedValue="{Binding Path=NumPoles}" SelectedValuePath="Tag" >
                                <ComboBoxItem Tag="1">1P</ComboBoxItem>
                                <ComboBoxItem Tag="2">2P</ComboBoxItem>
                                <ComboBoxItem Tag="3">3P</ComboBoxItem>
                            </ComboBox>
                            <CheckBox Foreground="#FFF" Visibility="{Binding CtsVisible}" IsChecked="{Binding HasCts}" >CTS</CheckBox>
                            <CheckBox Foreground="#FFF" Visibility="{Binding IsSpaceVisible}" IsChecked="{Binding IsSpace}" >Space</CheckBox>
                            <CheckBox Foreground="#FFF" Visibility="{Binding FuseOnlyVisible}" IsChecked="{Binding IsFuseOnly}" >Fuse Only</CheckBox>
                            <ComboBox Width="135" Visibility="{Binding TransformerVoltageVisible}" SelectedValue="{Binding Path=VoltageId}" SelectedValuePath="Tag" >
                                <ComboBoxItem Tag="1">480V-120/208V-3Φ</ComboBoxItem>
                                <ComboBoxItem Tag="2">208V-277/480V-3Φ</ComboBoxItem>
                                <ComboBoxItem Tag="3">480V-120/240V-3Φ</ComboBoxItem>
                                <ComboBoxItem Tag="4">240V-277/480V-3Φ</ComboBoxItem>
                                <ComboBoxItem Tag="5">240V-120/208V-3Φ</ComboBoxItem>
                                <ComboBoxItem Tag="6">208V-120/240V-3Φ</ComboBoxItem>
                                <ComboBoxItem Tag="7">240V-120/208V-1Φ</ComboBoxItem>
                                <ComboBoxItem Tag="8">208V-120/240V-1Φ</ComboBoxItem>
                            </ComboBox>
                            <ComboBox Width="95" Visibility="{Binding KvaVisible}"  SelectedValue="{Binding Path=KvaId}" SelectedValuePath="Tag" >
                                <ComboBoxItem Tag="1">45 KVA</ComboBoxItem>
                                <ComboBoxItem Tag="2">75 KVA</ComboBoxItem>
                                <ComboBoxItem Tag="3">112.5 KVA</ComboBoxItem>
                                <ComboBoxItem Tag="4">150 KVA</ComboBoxItem>
                                <ComboBoxItem Tag="5">225 KVA</ComboBoxItem>
                                <ComboBoxItem Tag="6">300 KVA</ComboBoxItem>
                                <ComboBoxItem Tag="7">500 KVA</ComboBoxItem>
                                <ComboBoxItem Tag="8">750 KVA</ComboBoxItem>
                                <ComboBoxItem Tag="9">1000 KVA</ComboBoxItem>
                                <ComboBoxItem Tag="10">1500 KVA</ComboBoxItem>
                                <ComboBoxItem Tag="11">2000 KVA</ComboBoxItem>
                                <ComboBoxItem Tag="12">2500 KVA</ComboBoxItem>
                            </ComboBox>
                            <Label Foreground="White" Visibility="{Binding EquipmentVoltageVisible}">Voltage</Label>
                            <ComboBox Width="95" Visibility="{Binding EquipmentVoltageVisible}" SelectedValue="{Binding Path=VoltageId}" SelectedValuePath="Tag" >
                                <ComboBoxItem Tag="1">115</ComboBoxItem>
                                <ComboBoxItem Tag="2">120</ComboBoxItem>
                                <ComboBoxItem Tag="3">208</ComboBoxItem>
                                <ComboBoxItem Tag="4">230</ComboBoxItem>
                                <ComboBoxItem Tag="5">240</ComboBoxItem>
                                <ComboBoxItem Tag="6">277</ComboBoxItem>
                                <ComboBoxItem Tag="7">460</ComboBoxItem>
                                <ComboBoxItem Tag="8">480</ComboBoxItem>
                            </ComboBox>
                            <Label Foreground="White" Visibility="{Binding EquipmentVoltageVisible}">Category</Label>
                            <ComboBox Width="95" Visibility="{Binding EquipmentVoltageVisible}" SelectedValue="{Binding Path=CategoryId}" SelectedValuePath="Tag" >
                                <ComboBoxItem Tag="1">General</ComboBoxItem>
                                <ComboBoxItem Tag="2">Mechanical</ComboBoxItem>
                                <ComboBoxItem Tag="3">Plumbing</ComboBoxItem>
                                <ComboBoxItem Tag="4">Kitchen</ComboBoxItem>
                                <ComboBoxItem Tag="5">Lighting</ComboBoxItem>
                            </ComboBox>
                            <Label Foreground="White" Visibility="{Binding LoadAmperageVisible}">MCA</Label>
                            <TextBox Background="White" Visibility="{Binding LoadAmperageVisible}" BorderThickness="2" MaxLength="15" BorderBrush="#FF666666" Text="{Binding Mca}" Foreground="Black" />
                            <Label Foreground="White" Visibility="{Binding LoadAmperageVisible}">FLA</Label>
                            <TextBox Background="White" Visibility="{Binding LoadAmperageVisible}" BorderThickness="2" MaxLength="15" BorderBrush="#FF666666" Text="{Binding Fla}" Foreground="Black" />
                            <Label Foreground="White" Visibility="{Binding HpVisible}">HP</Label>
                            <TextBox Background="White" Visibility="{Binding HpVisible}" BorderThickness="2" MaxLength="15" BorderBrush="#FF666666" Text="{Binding Hp}" Foreground="Black" />
                            <Label Foreground="White" Visibility="{Binding NumBreakersVisible}">Num Breakers</Label>
                            <TextBox Background="White" Visibility="{Binding NumBreakersVisible}" BorderThickness="2" MaxLength="15" BorderBrush="#FF666666" Text="{Binding NumBreakers}" Foreground="Black" />
                            <CheckBox Foreground="#FFF" Visibility="{Binding IsThreePhaseVisible}" IsChecked="{Binding IsThreePhase}" >3-Phase</CheckBox>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="GroupNodeStyle" TargetType="{x:Type ctrl:GroupNode}" BasedOn="{StaticResource {x:Type ctrl:GroupNode}}">
            
            <Setter Property="Guid" Value="{Binding Guid, Mode=OneWay}"/>
            <!--disconnect position binding if you specify Mode=OneWay, because it will change binding position instance in view control.-->
            <Setter Property="Position" Value="{Binding Position}"/>
            <Setter Property="InnerPosition" Value="{Binding InnerPosition}"/>
            <Setter Property="InterlockPosition" Value="{Binding InterlockPosition}"/>
            <Setter Property="InnerWidth" Value="{Binding InnerWidth}"/>
            <Setter Property="InnerHeight" Value="{Binding InnerHeight}"/>
            <Setter Property="Comment" Value="{Binding Comment}"/>
            <Setter Property="CommentSize" Value="24"/>
            <Setter Property="IsSelected" Value="{Binding IsSelected}"/>
            <Setter Property="SizeChangedCommand" Value="{Binding SizeChangedCommand}"/>
            <Setter Property="HeaderContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <StackPanel Background="#FF666666">
                            <StackPanel HorizontalAlignment="Center">
                                <TextBox Background="#FF666666" BorderThickness="2" BorderBrush="#FF666666" Text="{Binding Name}" Foreground="White"/>
                            </StackPanel>
                        </StackPanel>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="22"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--
        <StackPanel Grid.Row="0">
            <DockPanel LastChildFill="False">
                <Button Margin="4" Height="24" Content="Add Service" Command="{Binding AddServiceCommand}"/>
                <Button Margin="4" Height="24" Content="Add Main Breaker" Command="{Binding AddMainBreakerCommand}"/>
                <Button Margin="4" Height="24" Content="Add Meter" Command="{Binding AddNewMeterCommand}"/>
                <Button Margin="4" Height="24" Content="Add Bus" Command="{Binding AddNewBusCommand}"/>
                <Button Margin="4" Height="24" Content="Add Distribution Breaker" Command="{Binding AddDistributionBreakerCommand}"/>
                <Button Margin="4" Height="24" Content="Add Panel" Command="{Binding AddPanelCommand}"/>
                <Button Margin="4" Height="24" Content="Reset Zoom" Command="{Binding ResetScaleCommand}"/>
            </DockPanel>
            <DockPanel>
                <ComboBox Margin="4" Height="24" ItemsSource="{Binding GroupIntersectTypes, Mode=OneTime}" SelectedItem="{Binding SelectedGroupIntersectType}" ToolTip="group intersection type."/>
                <ComboBox Margin="4" Height="24" ItemsSource="{Binding RangeSelectionModes, Mode=OneTime}" SelectedItem="{Binding SelectedRangeSelectionMode}" ToolTip="range selection mode."/>
                <CheckBox Margin="4" Height="24" Content="Lock Node Links" IsChecked="{Binding IsLockedAllNodeLinks}" VerticalContentAlignment="Center"/>
                <CheckBox Margin="4" Height="24" Content="IsEnableAllNodeConnectors" IsChecked="{Binding IsEnableAllNodeConnectors}" VerticalContentAlignment="Center"/>
                <CheckBox Margin="4" Height="24" Content="AllowToOverrideConnection" IsChecked="{Binding AllowToOverrideConnection}" VerticalContentAlignment="Center" ToolTip="You can't connect multiple links if true."/>
                <CheckBox Margin="4" Height="24" Content="ClipToBounds" IsChecked="{Binding ClipToBounds}" VerticalContentAlignment="Center"/>
                
            </DockPanel>
        </StackPanel>
            
-->
        <DockPanel Grid.Row="0">
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_File">
                    <MenuItem Header="_Save" Command="{Binding SaveCommand}"/>
                    <MenuItem Header="_Close" Command="{Binding SaveAndCloseCommand}"/>
                </MenuItem>
                <MenuItem Header="_Edit">
                    <MenuItem Header="_Select All" Command="{Binding SelectAllCommand}" />
                </MenuItem>
                <TextBox TextWrapping="Wrap" Text="{Binding Path=ProjectNo}" Width="120"/>
                <ComboBox Width="60" ItemsSource="{Binding ProjectVersions}" SelectedItem="{Binding Path=ProjectVersion}" IsSynchronizedWithCurrentItem="True" SelectedIndex="0"/>
                <Button Content="Load" Width="50" Command="{Binding LoadProjectNodesCommand}"/>
                <MenuItem Header="{Binding ProjectName}">
                    <MenuItem Header="_Export" Command="{Binding SelectAllCommand}" />
                </MenuItem>
            </Menu>
        </DockPanel>
        <ctrl:NodeGraph Grid.Row="3"
                        x:Name="NodeGraph"
                        MoveWithMouse="Middle"
                        Scale="{Binding Scale}"
                        Offset="{Binding Offset, Mode=OneWayToSource}"
                        RightClickPoint="{Binding RightClickPoint, Mode=OneWayToSource}"
                        ItemsSource="{Binding NodeViewModels}"
                        ItemContainerStyle="{StaticResource DefaultNodeStyle}"
                        NodeLinks="{Binding NodeLinkViewModels}"
                        NodeLinkStyle="{StaticResource NodeLinkStyle}"                        
                        GroupNodes="{Binding GroupNodeViewModels}"
                        GroupNodeStyle="{StaticResource GroupNodeStyle}"
                        PreviewConnectLinkCommand="{Binding PreviewConnectLinkCommand}"
                        ConnectedLinkCommand="{Binding ConnectedLinkCommand}"
                        DisconnectedLinkCommand="{Binding DisconnectedLinkCommand}"
                        AllowToOverrideConnection="{Binding AllowToOverrideConnection}"
                        ClipToBounds="{Binding ClipToBounds}"
                        ContextMenu="{StaticResource NodeGraphContextMenu}">

            <ctrl:NodeGraph.Style>
                <Style TargetType="{x:Type ctrl:NodeGraph}" BasedOn="{StaticResource {x:Type ctrl:NodeGraph}}">
                    <Style.Triggers>
                        <!--Group intersect -->
                        <DataTrigger Binding="{Binding SelectedGroupIntersectType}" Value="{x:Static vm:GroupIntersectType.CursorPointVMDefine}">
                            <Setter Property="GroupIntersectType" Value="{x:Static ctrl:GroupIntersectType.CursorPoint}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding SelectedGroupIntersectType}" Value="{x:Static vm:GroupIntersectType.BoundingBoxVMDefine}">
                            <Setter Property="GroupIntersectType" Value="{x:Static ctrl:GroupIntersectType.BoundingBox}"/>
                        </DataTrigger>

                        <!--Range selection mode-->
                        <DataTrigger Binding="{Binding SelectedRangeSelectionMode}" Value="{x:Static vm:RangeSelectionMode.ContainVMDefine}">
                            <Setter Property="RangeSelectionMdoe" Value="{x:Static ctrl:RangeSelectionMode.Contain}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding SelectedRangeSelectionMode}" Value="{x:Static vm:RangeSelectionMode.IntersectVMDefine}">
                            <Setter Property="RangeSelectionMdoe" Value="{x:Static ctrl:RangeSelectionMode.Intersect}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ctrl:NodeGraph.Style>
            
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" CommandParameter="{Binding SelectedItems, ElementName=NodeGraph}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ctrl:NodeGraph>
    </Grid>
</Window>
